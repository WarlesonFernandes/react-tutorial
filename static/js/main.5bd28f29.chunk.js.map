{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Forms","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","bordered","style","width","marginTop","layout","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","console","log","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","message","type","id","onChange","htmlType","Component","App","characters","filter","character","i","className","Form","root","document","getElementById","ReactDOM","render"],"mappings":"iOAEMA,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,qCACA,6BAMVC,EAAY,SAAAC,GAEd,IAAMC,EAAQD,EAAME,eAAiBF,EAAME,cAAcC,KAAI,SAACC,EAAKC,GAC/D,OACI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,kBAAKR,EAAMS,gBAAgBJ,IAA5C,wBAJCA,MAUjB,OAAO,gCAAQJ,KAcJS,EAXD,SAACV,GACV,IAAQE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBAEvB,OACG,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAiBA,EAAeO,gBAAiBA,Q,oDCqDzDE,E,4MArFXC,aAAe,CACXN,KAAM,GACNC,IAAK,I,EAGTM,MAAQ,EAAKD,a,EAEbE,aAAc,SAACC,GACX,MAAuBA,EAAMC,OAAtBV,EAAP,EAAOA,KAAMW,EAAb,EAAaA,MAEb,EAAKC,SAAL,eACKZ,EAAQW,K,EAIjBE,WAAa,WACT,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGvB,WACI,MAAsBS,KAAKR,MAAnBP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAUd,OACI,cAAC,IAAD,CAAMe,UAAU,EAAOC,MAAO,CAACC,MAAO,OAAQC,UAAW,IAAzD,SACI,cAAC,IAAD,CAAMF,MAAO,CAAEC,MAAO,QAAtB,SACI,eAAC,IAAD,CACAlB,KAAK,QACLoB,OAAO,WACPC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,cAAe,CAAEC,UAAU,GAC3BC,SAjBK,SAACC,GACdC,QAAQC,IAAI,WAAYF,IAiBhBG,eAda,SAACC,GACtBH,QAAQC,IAAI,UAAWE,IAcfC,aAAa,MARb,UAUA,cAAC,IAAKC,KAAN,CACIC,MAAM,OACNlC,KAAK,OACLmC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,4BAHvC,SAKI,cAAC,IAAD,CACIC,KAAK,OACLtC,KAAK,OACLuC,GAAG,OACH5B,MAAOX,EACPwC,SAAUzB,KAAKP,iBAIvB,cAAC,IAAKyB,KAAN,CACIC,MAAM,MACNlC,KAAK,MACLmC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,2BAHvC,SAKI,cAAC,IAAD,CACIC,KAAK,OACLtC,KAAK,MACLuC,GAAG,MACH5B,MAAOV,EACPuC,SAAUzB,KAAKP,iBAIvB,cAAC,IAAKyB,KAAN,UACI,cAAC,IAAD,CAAQK,KAAK,UAAUG,SAAS,SAASvC,QAASa,KAAKF,WAAvD,iC,GA1EJ6B,aC+BLC,E,4MA9BXpC,MAAQ,CACJqC,WAAY,I,EAGhBzC,gBAAkB,SAACJ,GACf,IAAO6C,EAAc,EAAKrC,MAAnBqC,WAEP,EAAKhC,SAAS,CACVgC,WAAYA,EAAWC,QAAO,SAACC,EAAUC,GACzC,OAAOA,IAAMhD,Q,EAKrBe,aAAe,SAACgC,GACZ,EAAKlC,SAAS,CAACgC,WAAW,GAAD,mBAAM,EAAKrC,MAAMqC,YAAjB,CAA6BE,O,4CAG1D,WACI,IAAQF,EAAe7B,KAAKR,MAApBqC,WAER,OACI,sBAAKI,UAAU,YAAf,UACI,cAAC,EAAD,CAAQpD,cAAegD,EAAYzC,gBAAiBY,KAAKZ,kBACzD,cAAC8C,EAAD,CAAOnC,aAAcC,KAAKD,sB,GAzBxB4B,aCCZQ,G,OAAOC,SAASC,eAAe,SAErCC,IAASC,OAAO,cAAC,EAAD,IAAQJ,K","file":"static/js/main.5bd28f29.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>  \r\n    );\r\n}\r\n\r\nconst TableBody = props => {\r\n    \r\n    const rows =  props.characterData && props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={()=> props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>   \r\n        );\r\n    });\r\n\r\n    return <tbody>{rows}</tbody>;\r\n}\r\n\r\nconst Table = (props) => {\r\n     const { characterData, removeCharacter } = props;\r\n     \r\n     return(\r\n        <table>\r\n            <TableHeader />\r\n            <TableBody characterData = {characterData} removeCharacter={removeCharacter} />\r\n        </table>   \r\n     );\r\n}\r\n\r\nexport default Table;\r\n","import React, {Component} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button, Card} from 'antd';\r\n\r\nclass Forms extends Component {\r\n    initialState = {\r\n        name: '',\r\n        job: '',\r\n    }\r\n\r\n    state = this.initialState;\r\n\r\n    handleChange= (event) => {\r\n        const {name, value} =  event.target;\r\n\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n    \r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    render() {\r\n        const { name, job } = this.state;\r\n        \r\n        const onFinish = (values: any) => {\r\n            console.log('Success:', values);\r\n          };\r\n        \r\n          const onFinishFailed = (errorInfo: any) => {\r\n            console.log('Failed:', errorInfo);\r\n          };\r\n\r\n        return(\r\n            <Card bordered={false} style={{width: '100%', marginTop: 16 }}>\r\n                <Card style={{ width: '100%' }}>\r\n                    <Form\r\n                    name=\"basic\"\r\n                    layout=\"vertical\"\r\n                    labelCol={{ span: 8 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    autoComplete=\"off\"\r\n                    >\r\n                    <Form.Item\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        rules={[{ required: true, message: 'Please input your name!' }]}\r\n                    >\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            value={name}\r\n                            onChange={this.handleChange} />\r\n                    \r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Job\"\r\n                        name=\"job\"\r\n                        rules={[{ required: true, message: 'Please input your job!' }]}\r\n                    >\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"job\"\r\n                            id=\"job\"\r\n                            value={job}\r\n                            onChange={this.handleChange} />\r\n                    \r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={this.submitForm}>\r\n                        Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                    \r\n                    </Form>\r\n                </Card>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Forms;\r\n","import React, {Component} from 'react'\r\nimport Tables from './Table'\r\nimport Forms from './Form'\r\n\r\nclass App extends Component {\r\n    state = { \r\n        characters: [ ],\r\n    };\r\n\r\n    removeCharacter = (index)=>{\r\n        const {characters} = this.state\r\n\r\n        this.setState({\r\n            characters: characters.filter((character,i)=>{\r\n            return i !== index;           \r\n            })\r\n        });\r\n    }\r\n    \r\n    handleSubmit = (character) => {\r\n        this.setState({characters: [...this.state.characters, character]})\r\n    }\r\n\r\n    render() {\r\n        const { characters } = this.state;\r\n    \r\n        return (\r\n            <div className=\"container\">\r\n                <Tables characterData={characters} removeCharacter={this.removeCharacter} />\r\n                <Forms handleSubmit={this.handleSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nconst root = document.getElementById('root')\n\nReactDOM.render(<App />,root)"],"sourceRoot":""}